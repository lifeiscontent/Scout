'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _React = React,
    Component = _React.Component;


var findPosition = function findPosition(node) {
  var offsetLeft = node.offsetLeft;
  var offsetTop = node.offsetTop;

  while (node.offsetParent) {
    if (node == document.body) {
      break;
    } else {
      offsetLeft = offsetLeft + node.offsetParent.offsetLeft;
      offsetTop = offsetTop + node.offsetParent.offsetTop;
      node = node.offsetParent;
    }
  }

  return {
    offsetLeft: offsetLeft,
    offsetTop: offsetTop
  };
};

var ScoutInfoPanel = function (_Component) {
  _inherits(ScoutInfoPanel, _Component);

  function ScoutInfoPanel(props) {
    _classCallCheck(this, ScoutInfoPanel);

    var _this = _possibleConstructorReturn(this, (ScoutInfoPanel.__proto__ || Object.getPrototypeOf(ScoutInfoPanel)).call(this, props));

    _this.style = {
      root: {
        backgroundColor: 'black',
        color: 'white',
        fontFamily: 'sans-serif',
        fontSize: 12,
        left: 0,
        lineHeight: 1,
        padding: 12,
        position: 'fixed',
        right: 0,
        top: 0,
        zIndex: 99999999
      },
      link: {
        color: '#3b99fc',
        float: 'right'
      },
      key: {
        fontWeight: 700
      },
      value: {
        color: '#CCCCCC'
      }
    };
    _this.state = {
      helpIsActive: false
    };
    _this.handleHelpClick = _this.handleHelpClick.bind(_this);
    return _this;
  }

  _createClass(ScoutInfoPanel, [{
    key: 'handleHelpClick',
    value: function handleHelpClick(event) {
      this.setState({ helpIsActive: !this.state.helpIsActive });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(
        'div',
        { style: this.style.root },
        React.createElement(
          'details',
          {
            onClick: this.handleHelpClick,
            style: {
              display: '' + (this.state.helpIsActive ? 'block' : 'inline-block')
            }
          },
          React.createElement(
            'summary',
            {
              style: { color: '#CCCCCC', paddingRight: 6, fontWeight: 700 }
            },
            'Scout'
          ),
          React.createElement(
            'div',
            { style: { marginTop: 6, marginBottom: 6 } },
            React.createElement(
              'strong',
              { style: this.style.key },
              'Change hue'
            ),
            ':',
            ' ',
            React.createElement(
              'kbd',
              { style: this.style.value },
              'Shift+C'
            ),
            ' ',
            React.createElement(
              'strong',
              { style: this.style.key },
              'Change opacity'
            ),
            ':',
            ' ',
            React.createElement(
              'kbd',
              { style: this.style.value },
              'Shift+X'
            ),
            ' ',
            React.createElement(
              'strong',
              { style: this.style.key },
              'Close'
            ),
            ':',
            ' ',
            React.createElement(
              'kbd',
              { style: this.style.value },
              'Esc'
            ),
            ' '
          )
        ),
        Object.entries(this.props.data).map(function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              key = _ref2[0],
              value = _ref2[1];

          return React.createElement(
            'span',
            null,
            React.createElement(
              'strong',
              { style: _this2.style.key },
              key
            ),
            ':',
            ' ',
            React.createElement(
              'span',
              { style: _this2.style.value },
              value,
              ' '
            )
          );
        }),
        React.createElement(
          'a',
          {
            style: this.style.link,
            href: 'https://hired.com/x/On0PYI',
            target: '_blank'
          },
          'Looking for a job?'
        ),
        React.createElement('div', { style: { clear: 'both' } })
      );
    }
  }]);

  return ScoutInfoPanel;
}(Component);

var Scout = function (_Component2) {
  _inherits(Scout, _Component2);

  function Scout(props) {
    _classCallCheck(this, Scout);

    var _this3 = _possibleConstructorReturn(this, (Scout.__proto__ || Object.getPrototypeOf(Scout)).call(this, props));

    _this3.state = {
      hue: 0,
      opacity: 0.3,
      style: {
        pointerEvents: 'none',
        position: 'absolute'
      }
    };
    _this3.handleDocumentMouseMove = _this3.handleDocumentMouseMove.bind(_this3);
    _this3.handleDocumentKeyDown = _this3.handleDocumentKeyDown.bind(_this3);
    return _this3;
  }

  _createClass(Scout, [{
    key: 'handleDocumentKeyDown',
    value: function handleDocumentKeyDown(event) {
      var key = event.which || event.keyCode || 0;
      switch (true) {
        case event.shiftKey && key === 88:
          this.setState({ hue: (this.state.hue + 10) % 360 });
          break;
        case event.shiftKey && key === 67:
          this.setState({
            opacity: (this.state.opacity * 100 + 10) % 110 / 100
          });
          break;
      }
    }
  }, {
    key: 'handleDocumentMouseMove',
    value: function handleDocumentMouseMove(event) {
      var _event$target = event.target,
          height = _event$target.offsetHeight,
          width = _event$target.offsetWidth;

      var _findPosition = findPosition(event.target),
          left = _findPosition.offsetLeft,
          top = _findPosition.offsetTop;

      this.setState({
        style: _extends({}, this.state.style, {
          height: height,
          left: left,
          top: top,
          width: width
        })
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      document.addEventListener('mousemove', this.handleDocumentMouseMove, false);
      document.addEventListener('keydown', this.handleDocumentKeyDown, false);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      document.removeEventListener('mousemove', this.handleDocumentMouseMove, false);
      document.removeEventListener('keydown', this.handleDocumentKeyDown, false);
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          style = _state.style,
          opacity = _state.opacity,
          hue = _state.hue;
      var width = style.width,
          height = style.height,
          left = style.left,
          top = style.top;

      var data = {
        width: width,
        height: height,
        left: left,
        top: top,
        opacity: opacity,
        hue: hue
      };

      return React.createElement(
        'div',
        null,
        React.createElement('div', {
          style: _extends({}, style, {
            backgroundColor: 'hsla(' + hue + ', 100%, 50%, ' + opacity + ')'
          })
        }),
        React.createElement(ScoutInfoPanel, { data: data })
      );
    }
  }]);

  return Scout;
}(Component);
